apiVersion: provisioning.cattle.io/v1
kind: Cluster
metadata:
  {{- if .Values.cluster.labels }}
  labels:
{{ toYaml .Values.cluster.labels | indent 4 }}
  {{- end }}
  {{- if .Values.cluster.annotations }}
  annotations:
{{ toYaml .Values.cluster.annotations | indent 4 }}
  {{- end }}
  name: {{ .Values.cluster.name }}
  namespace: fleet-default
spec:
  {{- if .Values.cloudCredentialSecretName }}
  cloudCredentialSecretName: {{ .Values.cloudCredentialSecretName }}
  {{- end }}
  {{- if .Values.kubernetesVersion }}
  kubernetesVersion: {{ .Values.kubernetesVersion }}
  {{- end }}
  {{- if .Values.rke.localClusterAuthEndpoint.enabled }}
  localClusterAuthEndpoint:
    enabled: {{ .Values.rke.localClusterAuthEndpoint.enabled }}
    fqdn: {{ .Values.rke.localClusterAuthEndpoint.fqdn }}
    caCerts: {{ .Values.rke.localClusterAuthEndpoint.caCerts }}
  {{- end }}
  # enable network policy
  enableNetworkPolicy: true
  # specify rancher helm chart values deployed into downstream cluster
  # rancherValues: {}
  rkeConfig:
    {{- if ne .Values.cloudprovider "custom" }}
    machinePools:
    upgradeStrategy:
      controlPlaneDrainOptions:
        enabled: false
        # deleteEmptyDirData: false
        # disableEviction: false
        # gracePeriod: 0
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 0
      workerDrainOptions:
        enabled: false
        # deleteEmptyDirData: false
        # disableEviction: false
        # gracePeriod: 0
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 0
      workerConcurrency: "10%"
      controlPlaneConcurrency: "10%"
{{- if .Values.agentEnvs }}
  agentEnvVars:
{{ toYaml .Values.agentEnvs | indent 4 }}
{{- end }}
